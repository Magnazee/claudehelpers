#!/bin/bash

# Get the directory of this script and source utilities
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
source "$PROJECT_ROOT/lib/wrapper-utils.sh"

# Initialize environment
check_environment

# Check for required credentials before proceeding
check_required_vars GITHUB_TOKEN

# Function to check/install GitHub CLI
ensure_github_cli() {
    check_command "/c/Program Files/GitHub CLI/gh.exe" "Please run './bin/github setup' to install GitHub CLI."
    
    # Add to PATH if not already there
    if [[ ":$PATH:" != *":/c/Program Files/GitHub CLI:"* ]]; then
        export PATH="/c/Program Files/GitHub CLI:$PATH"
    fi

    # Ensure authentication
    if ! gh auth status >/dev/null 2>&1; then
        if [ -n "$GITHUB_TOKEN" ]; then
            echo "$GITHUB_TOKEN" | gh auth login --with-token
        else
            error_exit "GitHub token not found and interactive authentication not supported. Please set GITHUB_TOKEN in env.sh"
        fi
    fi
}

# Function to handle initial setup
setup_github_cli() {
    if [[ "$OSTYPE" == "msys" || "$OSTYPE" == "win32" ]]; then
        echo "Installing GitHub CLI..."
        winget install --id GitHub.cli || error_exit "Failed to install GitHub CLI"
        success "GitHub CLI installed successfully. Please restart your terminal."
        exit 0
    else
        error_exit "Automatic installation only supported on Windows. Please install GitHub CLI manually from https://cli.github.com/"
    fi
}

# Show help if no arguments provided
if [ $# -eq 0 ]; then
    cat << EOF
Usage: github <command> [arguments...]

This is a wrapper around the GitHub CLI (gh) that handles:
- Automatic CLI installation
- Authentication via GITHUB_TOKEN
- Cross-platform support

Environment Variables Required:
  GITHUB_TOKEN    GitHub personal access token

Commands:
  setup           Install GitHub CLI (Windows only)
  <gh command>    Any GitHub CLI command

Examples:
  github setup
  github repo create myrepo --public
  github repo clone owner/repo
  github issue list
  github pr create
  github release create v1.0.0

For full GitHub CLI documentation, run:
  github --help
EOF
    exit 1
fi

# Handle setup command
if [ "$1" = "setup" ]; then
    setup_github_cli
    exit 0
fi

# For all other commands, ensure GitHub CLI is ready
ensure_github_cli

# Pass all arguments directly to gh
gh "$@"
status=$?

if [ $status -eq 0 ]; then
    success "Command completed successfully"
else
    error_exit "Command failed with exit code $status"
fi
