#!/bin/bash

# Get the directory of this script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

# Source environment if exists
if [ -f "$PROJECT_ROOT/env.sh" ]; then
    source "$PROJECT_ROOT/env.sh"
fi

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

error_exit() {
    echo -e "${RED}Error: $1${NC}" >&2
    exit 1
}

success() {
    echo -e "${GREEN}$1${NC}"
}

# Function to check/install GitHub CLI
ensure_github_cli() {
    if ! command -v gh >/dev/null 2>&1; then
        echo "Installing GitHub CLI..."
        if [[ "$OSTYPE" == "msys" || "$OSTYPE" == "win32" ]]; then
            winget install --id GitHub.cli || error_exit "Failed to install GitHub CLI"
        elif [[ "$OSTYPE" == "darwin"* ]]; then
            brew install gh || error_exit "Failed to install GitHub CLI"
        elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
            if command -v apt >/dev/null 2>&1; then
                curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
                && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
                && sudo apt update \
                && sudo apt install gh
            elif command -v dnf >/dev/null 2>&1; then
                sudo dnf install gh
            else
                error_exit "Unable to install GitHub CLI. Please install manually from https://cli.github.com/"
            fi
        fi
    fi

    # Ensure authentication
    if ! gh auth status >/dev/null 2>&1; then
        if [ -n "$GITHUB_TOKEN" ]; then
            echo "$GITHUB_TOKEN" | gh auth login --with-token
        else
            gh auth login
        fi
    fi
}

# Show help if no arguments provided
if [ $# -eq 0 ]; then
    cat << EOF
Usage: github <command> [arguments...]

This is a wrapper around the GitHub CLI (gh) that handles:
- Automatic CLI installation
- Authentication via GITHUB_TOKEN or interactive login
- Cross-platform support

All GitHub CLI commands are supported. Examples:
  github repo create myrepo --public
  github repo clone owner/repo
  github issue list
  github pr create
  github release create v1.0.0

For full GitHub CLI documentation, run:
  github --help
EOF
    exit 1
fi

# Ensure GitHub CLI is installed and authenticated
ensure_github_cli

# Pass all arguments directly to gh
gh "$@"
status=$?

if [ $status -eq 0 ]; then
    success "Command completed successfully"
else
    error_exit "Command failed with exit code $status"
fi
