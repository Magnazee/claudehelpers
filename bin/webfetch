#!/bin/bash

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to check if a command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Function to check if a Python package is installed
check_python_package() {
    python -c "import $1" >/dev/null 2>&1
}

# Function to display error and exit
error_exit() {
    echo -e "${RED}Error: $1${NC}" >&2
    exit 1
}

# Function to display warning
warning() {
    echo -e "${YELLOW}Warning: $1${NC}" >&2
}

# Function to display success
success() {
    echo -e "${GREEN}$1${NC}"
}

# Check for Python 3.7+
if ! command_exists python; then
    error_exit "Python is not installed. Please install Python 3.7 or higher from https://python.org"
fi

# Check Python version
PYTHON_VERSION=$(python -c 'import sys; v = sys.version_info; print(f"{v.major}.{v.minor}" if v.major >= 3 and v.minor >= 7 else "0.0")')
if [ "$PYTHON_VERSION" = "0.0" ]; then
    error_exit "Python version must be 3.7 or higher. Current version: $(python --version)"
fi

# Check for pip
if ! command_exists pip; then
    error_exit "pip is not installed. Please install pip (Python package manager)"
fi

# Package mapping (install name -> import name)
declare -A PACKAGE_MAP
PACKAGE_MAP=(
    ["playwright"]="playwright"
    ["httpx"]="httpx"
    ["beautifulsoup4"]="bs4"
)

# Check each required package
MISSING_PACKAGES=()
for package in "${!PACKAGE_MAP[@]}"; do
    if ! python -c "import ${PACKAGE_MAP[$package]}" >/dev/null 2>&1; then
        MISSING_PACKAGES+=("$package")
    fi
done

# If there are missing packages, install them
if [ ${#MISSING_PACKAGES[@]} -ne 0 ]; then
    echo "The following Python packages are missing and will be installed:"
    printf '%s\n' "${MISSING_PACKAGES[@]}"
    
    pip install "${MISSING_PACKAGES[@]}"
    
    # Check if installation was successful
    for package in "${MISSING_PACKAGES[@]}"; do
        if ! python -c "import ${PACKAGE_MAP[$package]}" >/dev/null 2>&1; then
            error_exit "Failed to install package: $package"
        fi
    done
fi

# Check if Playwright browsers are installed
PLAYWRIGHT_CHECK=$(python -c "
from playwright.sync_api import sync_playwright
try:
    with sync_playwright() as p:
        browser = p.chromium.launch()
        browser.close()
    print('ok')
except Exception as e:
    print('error')
")

if [ "$PLAYWRIGHT_CHECK" = "error" ]; then
    echo "Installing Playwright browsers..."
    playwright install chromium
fi

# Get the directory of this script
SCRIPT_DIR=$(dirname "$0")

# Check if webfetch.py exists
if [ ! -f "$SCRIPT_DIR/webfetch.py" ]; then
    error_exit "webfetch.py not found in script directory: $SCRIPT_DIR"
fi

# All checks passed, execute the Python script
success "All dependencies are satisfied."
echo "Running webfetch..."
python "$SCRIPT_DIR/webfetch.py" "$@"
